; vim: ft=dosini

[colors]
background = #282C34
background-alt = #222222
foreground = #FFFFFF
foreground-alt = #888888

urgent = #900000

black =     ${xrdb:color0:#000000}
maroon =    ${xrdb:color1:#800000}
green =     ${xrdb:color2:#008000}
olive =     ${xrdb:color3:#808000}
navy =      ${xrdb:color4:#000080}
purple =    ${xrdb:color5:#800080}
teal =      ${xrdb:color6:#008080}
silver =    ${xrdb:color7:#c0c0c0}
grey =      ${xrdb:color8:#808080}
red =       ${xrdb:color9:#ff0000}
lime =      ${xrdb:color10:#00ff00}
yellow =    ${xrdb:color11:#ffff00}
blue =      ${xrdb:color12:#0000ff}
fuchsia =   ${xrdb:color13:#ff00ff}
aqua =      ${xrdb:color14:#00ffff}
white =     ${xrdb:color15:#ffffff}

[bar/mybar]
; Use the following command to list available outputs:
; If unspecified, the application will pick the first one it finds.
; $ xrandr -q | grep " connected" | cut -d ' ' -f1
monitor = ${env:MONITOR:eDP1}

; Use the specified monitor as a fallback if the main one is not found.
monitor-fallback =

; Require the monitor to be in connected state
; XRandR sometimes report my monitor as being disconnected (when in use)
monitor-strict = false

; Tell the Window Manager not to configure the window.
; Use this to detach the bar if your WM is locking its size/position.
;override-redirect = true

; Put the bar at the bottom of the screen
bottom = false

; Prefer fixed center position for the `modules-center` block
; When false, the center position will be based on the size of the other blocks.
fixed-center = true

; Dimension defined as pixel value (e.g. 35) or percentage (e.g. 50%)
width = 100%
height = 35

; Offset defined as pixel value (e.g. 35) or percentage (e.g. 50%)
offset-x = 0
offset-y = 0

; Background argb color (e.g. #f00, #ff992a, #ddff1023)
background = ${colors.background}

; Foreground argb color (e.g. #f00, #ff992a, #ddff1023)
foreground = ${colors.foreground}

; Background gradient (vertical steps)
;   background-[0-9]+ = #aarrggbb
;background-0 =

; Value used for drawing rounded corners
; Individual top/bottom values can be defined using:
;   radius-{top,bottom}
radius = 0.0

; Under-/overline pixel size and argb color
; Individual values can be defined using:
;   {overline,underline}-size
;   {overline,underline}-color
line-size = 1
line-color = ${colors.foreground}

; Values applied to all borders
; Individual side values can be defined using:
;   border-{left,top,right,bottom}-size
;   border-{left,top,right,bottom}-color
border-size = 0
border-color = ${colors.foreground}

; Number of spaces to add at the beginning/end of the bar
; Individual side values can be defined using:
;   padding-{left,right}
padding = 0

; Number of spaces to add before/after each module
; Individual side values can be defined using:
;   module-margin-{left,right}
module-margin = 1

; Fonts are defined using <font-name>;<vertical-offset>
; Font names are specified using a fontconfig pattern.
;   font-0 = NotoSans-Regular:size=8;2
;   font-1 = MaterialIcons:size=10
;   font-2 = Termsynu:size=8;-1
;   font-3 = FontAwesome:size=10
; See the Fonts wiki page for more details
font-0 = Misc Ohsnap:pixelsize=16:antialias=false;2
font-1 = Wuncon Siji:antialias=false;3
font-2 = Unifont:size=11:antialias=true;3

; Modules are added to one of the available blocks
;   modules-left = cpu ram
;   modules-center = xwindow xbacklight
;   modules-right = ipc clock
modules-left = i3 title
modules-center =
modules-right = network battery backlight pulseaudio date

; The separator will be inserted between the output of each module
;separator =

; This value is used to add extra spacing between elements
; @deprecated: This parameter will be removed in an upcoming version
spacing = 0

; Opacity value between 0.0 and 1.0 used on fade in/out
dim-value = 1.0

; Value to be used to set the WM_NAME atom
; If the value is empty or undefined, the atom value
; will be created from the following template: polybar-[BAR]_[MONITOR]
; NOTE: The placeholders are not available for custom values
;wm-name =

; Locale used to localize various module data (e.g. date)
; Expects a valid libc locale, for example: sv_SE.UTF-8
locale = en_US.UTF-8

; Position of the system tray window
; If empty or undefined, tray support will be disabled
; NOTE: A center aligned tray will cover center aligned modules
;
; Available positions:
;   left
;   center
;   right
tray-position = center

; If true, the bar will not shift its
; contents when the tray changes
tray-detached = false

; Tray icon max size
tray-maxsize = 16

; Enable pseudo transparency
; Will automatically be enabled if a fully transparent
; background color is defined using `tray-background`
tray-transparent = false

; Background color for the tray container
; By default the tray container will use the bar
; background color.
; Note: 32 bit alpha blending is not supported.
tray-background = ${root.background}

; Tray offset defined as pixel value (e.g. 35) or percentage (e.g. 50%)
tray-offset-x = 0
tray-offset-y = 0

; Pad the sides of each tray icon
tray-padding = 0

; Scale factor for tray clients
tray-scale = 1.0

; Restack the bar window and put it above the
; selected window manager's root
;
; Fixes the issue where the bar is being drawn
; on top of fullscreen window's
;
; Currently supported WM's:
;   bspwm
;   i3 (requires: `override-redirect = true`)
wm-restack = i3

; Enable support for inter-process messaging
; See the Messaging wiki page for more details.
enable-ipc = false

; Fallback click handlers that will be called if
; there's no matching module handler found.
;click-left =            urxvt &
;click-middle =
;click-right =           nm-connection-editor &
;scroll-up =
;scroll-down =
;double-click-left =
;double-click-middle =
;double-click-right =

[module/i3]
type = internal/i3

; Only show workspaces defined on the same output as the bar
;
; Useful if you want to show monitor specific workspaces
; on different bars
;
; Default: false
pin-workspaces = true

; This will split the workspace name on ':'
; Default: false
;strip-wsnumbers = true

; Sort the workspaces by index instead of the default
; sorting that groups the workspaces by output
; Default: false
index-sort = true

; Create click handler used to focus workspace
; Default: true
;enable-click = false

; Create scroll handlers used to cycle workspaces
; Default: true
;enable-scroll = false

; Wrap around when reaching the first/last workspace
; Default: true
wrapping-scroll = false

; Set the scroll cycle direction
; Default: true
reverse-scroll = false

; Use fuzzy (partial) matching on labels when assigning
; icons to workspaces
; Example: code;♚ will apply the icon to all workspaces
; containing 'code' in the label
; Default: false
;fuzzy-match = true

; ws-icon-[0-9]+ = label;icon
; NOTE: The label needs to match the name of the i3 workspace
;ws-icon-0 = 1;♚
;ws-icon-1 = 2;♛
;ws-icon-2 = 3;♜
;ws-icon-3 = 4;♝
;ws-icon-4 = 5;♞
;ws-icon-default = ♟

; Available tags:
;   <label-state> (default) - gets replaced with <label-(focused|unfocused|visible|urgent)>
;   <label-mode> (default)
format = <label-state> <label-mode>

; Available tokens:
;   %mode%
; Default: %mode%
label-mode = %mode%
label-mode-padding = 2
label-mode-background = ${colors.foreground-alt}
label-mode-overline = ${colors.background}
label-mode-foreground = ${colors.background}

; Available tokens:
;   %name%
;   %icon%
;   %index%
;   %output%
; Default: %icon%  %name%
label-focused = %name%
label-focused-foreground = ${colors.background}
label-focused-background = ${colors.foreground}
;label-focused-underline = #fba922
label-focused-padding = 1

; Available tokens:
;   %name%
;   %icon%
;   %index%
; Default: %icon%  %name%
label-unfocused = %name%
label-unfocused-foreground = ${colors.foreground-alt}
label-unfocused-overline = ${colors.foreground-alt}
label-unfocused-padding = 1

; Available tokens:
;   %name%
;   %icon%
;   %index%
; Default: %icon%  %name%
label-visible = %index%
label-visible-foreground = ${colors.foreground-alt}
;label-visible-underline = #555555
label-visible-padding = 1

; Available tokens:
;   %name%
;   %icon%
;   %index%
; Default: %icon%  %name%
label-urgent = %name%
label-urgent-foreground = ${colors.urgent}
label-urgent-overline = ${colors.urgent}
label-urgent-padding = 1


[module/filesystem]
type = internal/fs

; Mountpoints to display
mount-0 = /
;mount-1 = /home
;mount-2 = /var

; Seconds to sleep between updates
; Default: 30
interval = 500

; Display fixed precision values
; Default: false
;fixed-values = true

; Spacing between entries
; Default: 2
spacing = 4

; Available tags:
;   <label-mounted> (default)
;   <bar-free>
;   <bar-used>
;   <ramp-capacity>
format-mounted = <ramp-capacity><label-mounted>
format-mounted-overline = ${colors.foreground}

; Available tags:
;   <label-unmounted> (default)
format-unmounted = <label-unmounted>
format-unmounted-foreground = ${colors.foreground-alt}

; Available tokens:
;   %mountpoint%
;   %type%
;   %fsname%
;   %percentage_free%
;   %percentage_used%
;   %total%
;   %free%
;   %used%
; Default: %mountpoint% %percentage_free%%
label-mounted = %used%/%total% [%free%]

ramp-capacity-0 = 
ramp-capacity-1 = 
ramp-capacity-font = 1
ramp-capacity-margin-right = 2

; Available tokens:
;   %mountpoint%
; Default: %mountpoint% is not mounted
label-unmounted = %mountpoint%: not mounted

[module/network]
type = internal/network
interface = wlp2s0

; Seconds to sleep between updates
; Default: 1
;interval = 3.0

; Test connectivity every Nth update
; A value of 0 disables the feature
; NOTE: Experimental (needs more testing)
; Default: 0
;ping-interval = 3

; @deprecated: Define min width using token specifiers (%downspeed:min% and %upspeed:min%)
; Minimum output width of upload/download rate
; Default: 3
;udspeed-minwidth = 5

; Accumulate values from all interfaces
; when querying for up/downspeed rate
; Default: false
accumulate-stats = true

; Available tags:
;   <label-connected> (default)
;   <ramp-signal>
format-connected = <ramp-signal><label-connected>
format-connected-overline = ${colors.foreground}

; Available tags:
;   <label-disconnected> (default)
format-disconnected = <label-disconnected>
format-disconnected-foreground = ${colors.foreground-alt}

; Available tags:
;   <label-connected> (default)
;   <label-packetloss>
;   <animation-packetloss>
format-packetloss = <animation-packetloss><label-packetloss>

; Available tokens:
;   %ifname%    [wireless+wired]
;   %local_ip%  [wireless+wired]
;   %essid%     [wireless]
;   %signal%    [wireless]
;   %upspeed%   [wireless+wired]
;   %downspeed% [wireless+wired]
;   %linkspeed% [wired]
; Default: %ifname% %local_ip%
label-connected = %downspeed% %signal%%

; Available tokens:
;   %ifname%    [wireless+wired]
; Default: (none)
label-disconnected = %ifname%: not connected

; Available tokens:
;   %ifname%    [wireless+wired]
;   %local_ip%  [wireless+wired]
;   %essid%     [wireless]
;   %signal%    [wireless]
;   %linkspeed% [wired]
; Default: (none)
label-packetloss = %essid%!
label-packetloss-foreground = ${colors.foreground-alt}

; Only applies if <ramp-signal> is used
ramp-signal-0 = 
ramp-signal-1 = 
ramp-signal-2 = 
ramp-signal-3 = 
;ramp-signal-3 = 😊
;ramp-signal-4 = 😃
;ramp-signal-5 = 😈
ramp-signal-font = 1
ramp-signal-margin-right = 2

; Only applies if <animation-packetloss> is used
animation-packetloss-0 = 
;animation-packetloss-0-foreground = #ffa64c
animation-packetloss-1 = 
;animation-packetloss-1-foreground = #000000
animation-packetloss-font = 1
animation-packetloss-margin-right = 2
; Framerate in milliseconds
animation-packetloss-framerate = 500

[module/battery]
type = internal/battery

; This is useful in case the battery never reports 100% charge
full-at = 98

; Use the following command to list batteries and adapters:
; $ ls -1 /sys/class/power_supply/
battery = BAT0
adapter = AC0

; If an inotify event haven't been reported in this many
; seconds, manually poll for new values.
;
; Needed as a fallback for systems that don't report events
; on sysfs/procfs.
;
; Disable polling by setting the interval to 0.
;
; Default: 5
poll-interval = 30

; see "man date" for details on how to format the time string
; NOTE: if you want to use syntax tags here you need to use %%{...}
; Default: %H:%M:%S
time-format = %H:%M

; Available tags:
;   <label-charging> (default)
;   <bar-capacity>
;   <ramp-capacity>
;   <animation-charging>
format-charging = <label-charging>
format-charging-prefix = %{T1}
format-charging-prefix-padding-right = 2
format-charging-overline = ${colors.foreground}

; Available tags:
;   <label-discharging> (default)
;   <bar-capacity>
;   <ramp-capacity>
format-discharging = <ramp-capacity><label-discharging>
format-discharging-overline = ${colors.foreground}

; Available tags:
;   <label-full> (default)
;   <bar-capacity>
;   <ramp-capacity>
format-full = <label-full>
format-full-prefix = %{T1}
format-full-prefix-padding-right = 2
format-full-foreground = ${colors.lime}
format-full-overline = ${colors.lime}

; Available tokens:
;   %percentage% (default)
;   %time%
;   %consumption% (shows current charge rate in watts)
label-charging = %percentage%% %time%

; Available tokens:
;   %percentage% (default)
;   %time%
;   %consumption% (shows current discharge rate in watts)
label-discharging = %percentage%% %time%

; Available tokens:
;   %percentage% (default)
label-full = %percentage%%

; Only applies if <ramp-capacity> is used
ramp-capacity-0 = 
ramp-capacity-1 = 
ramp-capacity-2 = 
ramp-capacity-3 = 
ramp-capacity-4 = 
ramp-capacity-5 = 
;ramp-capacity-3 = 
;ramp-capacity-4 = 
ramp-capacity-font = 1
ramp-capacity-margin-right = 2

; Only applies if <bar-capacity> is used
;bar-capacity-width = 10

; Only applies if <animation-charging> is used
;animation-charging-0 = 
;animation-charging-1 = 
;animation-charging-2 = 
;animation-charging-3 = 
;animation-charging-4 = 
;animation-charging-5 = 
;animation-charging-6 = 
;animation-charging-7 = 
;animation-charging-8 = 
;animation-charging-9 = 
; Framerate in milliseconds
;animation-charging-framerate = 750

[module/backlight]
type = internal/xbacklight

; XRandR output to get get values from
; Default: the monitor defined for the running bar
output = eDP1

; Create scroll handlers used to set the backlight value
; Default: true
;enable-scroll = false

; Available tags:
;   <label> (default)
;   <ramp>
;   <bar>
format = <label>
format-overline = ${colors.foreground}
format-prefix = %{T1}
format-prefix-padding-right = 2

; Available tokens:
;   %percentage% (default)
label = %percentage%%

; Only applies if <ramp> is used
;ramp-0 = 🌕
;ramp-1 = 🌔
;ramp-2 = 🌓
;ramp-3 = 🌒
;ramp-4 = 🌑

; Only applies if <bar> is used
;bar-width = 10
;bar-indicator = |
;bar-fill = ─
;bar-empty = ─

[module/pulseaudio]
type = internal/pulseaudio

; Sink to be used, if it exists (find using `pacmd list-sinks`, name field)
; If not, uses default sink
sink = alsa_output.pci-0000_00_1f.3.analog-stereo

; Use PA_VOLUME_UI_MAX (~153%) if true, or PA_VOLUME_NORM (100%) if false
; Default: true
use-ui-max = true

; Available tags:
;   <label-volume> (default)
;   <ramp-volume>
;   <bar-volume>
format-volume = <ramp-volume><label-volume>
format-volume-overline = ${colors.foreground}

; Available tags:
;   <label-muted> (default)
;   <ramp-volume>
;   <bar-volume>
format-muted = <label-muted>
format-muted-foreground = ${colors.foreground-alt}

; Available tokens:
;   %percentage% (default)
label-volume = %percentage%%

; Available tokens:
;   %percentage% (default)
label-muted = muted

; Only applies if <ramp-volume> is used
ramp-volume-0 = 
ramp-volume-1 = 
ramp-volume-2 = 
;ramp-volume-2 = 🔊
ramp-volume-margin-right = 2
ramp-volume-font = 1
; If defined, it will replace <ramp-volume> when
; headphones are plugged in to `headphone_control_numid`
; If undefined, <ramp-volume> will be used for both
; Only applies if <ramp-volume> is used
;ramp-headphones-0 = 
;ramp-headphones-1 = 

[module/keyboard]
type = internal/xkeyboard

; List of indicators to ignore
blacklist-0 = num lock
blacklist-1 = scroll lock

; Available tags:
;   <label-layout> (default)
;   <label-indicator> (default)
format = <label-layout><label-indicator>
format-overline = ${colors.foreground}
format-prefix = %{T1}
format-prefix-padding-right = 2

; Available tokens:
;   %layout%
;   %name%
;   %number%
; Default: %layout%
;label-layout = %name%

; Available tokens:
;   %name%
; Default: %name%
label-indicator = %name%
label-indicator-margin-left = 2
label-indicator-foreground = ${colors.foreground-alt}

[module/date]
type = internal/date

; Seconds to sleep between updates
interval = 1

; See "man date" for details on how to format the date string
; NOTE: if you want to use syntax tags here you need to use %%{...}
date =

; Optional time format
time = %H:%M

; if `date-alt` or `time-alt` is defined, clicking
; the module will toggle between formats
date-alt = %A %B %d %Y
time-alt = %H:%M:%S

; Available tags:
;   <label> (default)
format = <label>
format-overline = ${colors.foreground}
format-prefix = 
format-prefix-padding-right = 2

; Available tokens:
;   %date%
;   %time%
; Default: %date%
label = %time% %date%

[module/title]
type = internal/xwindow

; Available tags:
;   <label> (default)

; Available tokens:
;   %title%
; Default: %title%
label = %title%
label-maxlen = 60

[module/weather]
type = custom/script

; Available tokens:
;   %counter%
; Command to be executed (using "/usr/bin/env sh -c [command]")
exec = ~/.config/polybar/scripts/weather

; Conditional command that, if defined, needs to exit successfully
; before the main exec command is invoked.
; Default: ""
;exec-if = pgrep -x myservice

; Will the script output continous content?
; Default: false
;tail = true

; Seconds to sleep between updates
; Default: 2 (0 if `tail = true`)
interval = 1800

; Available tags:
;   <output> - deprecated
;   <label> (default)
format = <label>
format-overline = ${colors.foreground}

; Available tokens:
;   %output%
; Default: %output%
;label = %output:0:15%...

; Available tokens:
;   %counter%
;
; "click-(left|middle|right)" will be executed using "/usr/bin/env sh -c [command]"
;click-left = echo left %counter%
;click-middle = echo middle %counter%
;click-right = echo right %counter%

; Available tokens:
;   %counter%
;
; "scroll-(up|down)" will be executed using "/usr/bin/env sh -c [command]"
;scroll-up = echo scroll up %counter%
;scroll-down = echo scroll down %counter%

